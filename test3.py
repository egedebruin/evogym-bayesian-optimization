import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

data_str = """
0: -1.4356298808995902
1: -7.2222889777459685
2: 5.9810805795159325
3: -2.435585716353394
4: -9.130326465314667
5: -3.1453382714954756
6: -3.864781586068858
7: 2.3489433456833737
8: 0.24142085452559314
9: -1.0902328168547086
10: -0.9042694602903012
11: -5.6892129387806705
12: 2.8874102594867495
13: -11.930912398408893
14: -9.59906918835545
15: 4.431301113219078
16: -8.171949311992549
17: 1.8109468709243544
18: -13.001680708446898
19: 8.147051826310204
20: -10.450938787836591
21: 1.9107433653029489
22: -6.100347403242267
23: 22.076883105359855
24: -1.2463286841042134
25: -0.7362314855063943
26: -5.212509646521198
27: 13.701162988485315
28: 34.602557957282436
29: 8.833110618489869
30: 4.994054541456364
31: -14.688426598921104
32: 1.3895994016094875
33: 23.42583592263921
34: -8.956039980597737
35: 15.849021050005746
36: -20.809118382756182
37: 10.309843105692515
38: -5.0329341019875
39: -1.3258639176152798
40: 27.762034927710538
41: -24.73046771252603
42: 18.715848450458004
43: -13.167367738121214
44: -17.92912904964082
45: -1.6661084036924905
46: -2.1153320085809213
47: 1.8571300386049074
48: -5.266886044379021
49: 32.78429086170309
50: -9.249409556672177
51: -4.9454499379164005
52: 0.7193977850756426
53: -6.497955036822454
54: 10.557191872190685
55: -1.7526018039798146
56: 2.6566820813894196
57: -14.966076356080244
58: 2.441380585498891
59: -5.9035188270766525
60: -16.498646193589522
61: -0.45578102711846924
62: -5.375085270223437
63: -11.50738341022246
64: 9.207478533697653
65: -5.26054397409996
66: -1.3109778211815382
67: 21.890965252486723
68: -1.5079952746805816
69: -4.821245056434847
70: 9.588993012707768
71: 3.940714609342592
72: -7.052550233265478
73: -3.366194198322745
74: -1.999906810907973
75: 0.040625346063926315
76: 3.7473657877241564
77: 0.16930962380411785
78: 1.490090179383074
79: -27.078144062839314
80: 0.3658520581947329
81: 9.61322938018776
82: 8.957233592612852
83: -5.976089236461988
84: 16.77944400559968
85: 15.801821930047154
86: -23.52514334009952
87: 5.889003629762833
88: -41.68566258248525
89: -16.00917189659374
90: -9.03520739785641
91: -6.456870856003633
92: -0.9125253190602436
93: -5.755997120134694
94: 7.078361099411232
95: -4.348827599424631
96: -9.187748910239947
97: -8.248077619894936
98: -6.800259551274472
99: -6.364077699177443
"""

# Convert to dictionary
data = {}
for line in data_str.strip().splitlines():
    key, value = line.split(":")
    data[int(key.strip())] = float(value.strip())

values = np.array(list(data.values()))

# Basic statistics
stats = {
    "count": len(values),
    "mean": np.mean(values),
    "median": np.median(values),
    "std_dev": np.std(values, ddof=1),
    "min": np.min(values),
    "max": np.max(values),
    "25th_percentile": np.percentile(values, 25),
    "75th_percentile": np.percentile(values, 75)
}

print(stats)

# Histogram
plt.figure(figsize=(10, 5))
plt.hist(values, bins=20, edgecolor='black')
plt.title("Histogram of Values")
plt.xlabel("Value")
plt.ylabel("Frequency")
plt.grid(axis='y', alpha=0.75)
plt.show()

# Rolling mean and std (window=10)
rolling_mean = pd.Series(values).rolling(window=10).mean()
rolling_std = pd.Series(values).rolling(window=10).std()

plt.figure(figsize=(12, 5))
plt.plot(values, label="Values", alpha=0.6)
plt.plot(rolling_mean, label="Rolling Mean (window=10)", color='red')
plt.plot(rolling_std, label="Rolling Std (window=10)", color='green')
plt.title("Rolling Mean and Standard Deviation (window=10)")
plt.xlabel("Index")
plt.ylabel("Value / Rolling Stats")
plt.legend()
plt.grid(alpha=0.5)
plt.show()
